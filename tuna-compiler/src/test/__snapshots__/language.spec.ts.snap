// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`language allows deleting of array fields even though it produces a runtime error: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "f" => FunctionDescription {
      "computation": Array [
        Object {
          "kind": "Update",
          "level": Array [
            Object {
              "kind": "Int",
              "value": 0,
            },
          ],
          "operation": Object {
            "kind": "DeleteField",
          },
          "root": Object {
            "index": 0,
            "kind": "Saved",
          },
        },
      ],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {},
}
`;

exports[`language allows deleting of keys in objects: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "f" => FunctionDescription {
      "computation": Array [
        Object {
          "kind": "Update",
          "level": Array [
            Object {
              "kind": "String",
              "value": "b",
            },
          ],
          "operation": Object {
            "kind": "DeleteField",
          },
          "root": Object {
            "index": 0,
            "kind": "Saved",
          },
        },
      ],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {},
}
`;

exports[`language allows for loops: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "loop" => FunctionDescription {
      "computation": Array [
        Object {
          "do": Array [
            Object {
              "kind": "Return",
              "value": Object {
                "index": 1,
                "kind": "Saved",
              },
            },
          ],
          "kind": "ArrayForEach",
          "target": Object {
            "index": 0,
            "kind": "Saved",
          },
        },
      ],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {},
}
`;

exports[`language allows keys on nested object: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "f" => FunctionDescription {
      "computation": Array [
        Object {
          "kind": "Return",
          "value": Object {
            "kind": "Keys",
            "target": Object {
              "kind": "Selection",
              "level": Array [
                Object {
                  "kind": "String",
                  "value": "b",
                },
                Object {
                  "kind": "String",
                  "value": "cdef",
                },
              ],
              "root": Object {
                "index": 0,
                "kind": "Saved",
              },
            },
          },
        },
      ],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {},
}
`;

exports[`language allows users to call keys() on globals and locals: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "f" => FunctionDescription {
      "computation": Array [
        Object {
          "kind": "Save",
          "value": Object {
            "kind": "Keys",
            "target": Object {
              "index": 0,
              "kind": "Saved",
            },
          },
        },
        Object {
          "kind": "Save",
          "value": Object {
            "kind": "Keys",
            "target": Object {
              "kind": "GlobalObject",
              "name": "g",
            },
          },
        },
      ],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {
    "g" => Object {
      "kind": "glob",
      "name": "g",
    },
  },
}
`;

exports[`language can declare temp variables: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "fff" => FunctionDescription {
      "computation": Array [
        Object {
          "kind": "Save",
          "value": Object {
            "kind": "Bool",
            "value": true,
          },
        },
        Object {
          "kind": "Save",
          "value": Object {
            "kind": "Bool",
            "value": false,
          },
        },
        Object {
          "kind": "Save",
          "value": Object {
            "kind": "Selection",
            "level": Array [
              Object {
                "index": 1,
                "kind": "Saved",
              },
            ],
            "root": Object {
              "index": 0,
              "kind": "Saved",
            },
          },
        },
      ],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {},
}
`;

exports[`language can overwrite inputs: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "fff" => FunctionDescription {
      "computation": Array [
        Object {
          "kind": "Update",
          "level": Array [],
          "operation": Object {
            "kind": "Bool",
            "value": false,
          },
          "root": Object {
            "index": 0,
            "kind": "Saved",
          },
        },
      ],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {},
}
`;

exports[`language cannot have a variable with the same name as a function 1`] = `
"In function fff: 
	The name fff is initialized to multiple variables/functions."
`;

exports[`language cannot have duplicate variables 1`] = `
"In function fff: 
	The name a is initialized to multiple variables/functions."
`;

exports[`language does not allow overwriting constants 1`] = `
"In function fff: 
	Attempting to overwrite constant variable b"
`;

exports[`language ensure variables declared in for loop are cleaned up: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "loop" => FunctionDescription {
      "computation": Array [
        Object {
          "do": Array [
            Object {
              "kind": "Save",
              "value": Object {
                "index": 0,
                "kind": "Saved",
              },
            },
          ],
          "kind": "ArrayForEach",
          "target": Object {
            "kind": "Selection",
            "level": Array [
              Object {
                "kind": "String",
                "value": "array",
              },
            ],
            "root": Object {
              "kind": "GlobalObject",
              "name": "g",
            },
          },
        },
        Object {
          "kind": "Save",
          "value": Object {
            "kind": "Selection",
            "level": Array [
              Object {
                "kind": "String",
                "value": "array",
              },
            ],
            "root": Object {
              "kind": "GlobalObject",
              "name": "g",
            },
          },
        },
        Object {
          "kind": "Return",
          "value": Object {
            "index": 0,
            "kind": "Saved",
          },
        },
      ],
      "input": Array [],
    },
  },
  "globals": Map {
    "g" => Object {
      "kind": "glob",
      "name": "g",
    },
  },
}
`;

exports[`language globals must be empty objects 1`] = `"Global someVar must be initialized as empty object"`;

exports[`language ifs allows any number of else ifs: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "maybe" => FunctionDescription {
      "computation": Array [
        Object {
          "conditionally": Array [
            Object {
              "cond": Object {
                "index": 0,
                "kind": "Saved",
              },
              "do": Array [
                Object {
                  "kind": "Return",
                  "value": Object {
                    "kind": "String",
                    "value": "a",
                  },
                },
              ],
              "kind": "Conditional",
            },
            Object {
              "cond": Object {
                "kind": "Selection",
                "level": Array [
                  Object {
                    "kind": "String",
                    "value": "b",
                  },
                ],
                "root": Object {
                  "index": 0,
                  "kind": "Saved",
                },
              },
              "do": Array [
                Object {
                  "kind": "Return",
                  "value": Object {
                    "kind": "String",
                    "value": "b",
                  },
                },
              ],
              "kind": "Conditional",
            },
            Object {
              "cond": Object {
                "kind": "Selection",
                "level": Array [
                  Object {
                    "kind": "String",
                    "value": "c",
                  },
                ],
                "root": Object {
                  "index": 0,
                  "kind": "Saved",
                },
              },
              "do": Array [
                Object {
                  "kind": "Return",
                  "value": Object {
                    "kind": "String",
                    "value": "c",
                  },
                },
              ],
              "kind": "Conditional",
            },
            Object {
              "do": Array [
                Object {
                  "kind": "Return",
                  "value": Object {
                    "kind": "String",
                    "value": "d",
                  },
                },
              ],
              "kind": "Else",
            },
          ],
          "kind": "If",
        },
      ],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {},
}
`;

exports[`language ifs allows elses: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "maybe" => FunctionDescription {
      "computation": Array [
        Object {
          "conditionally": Array [
            Object {
              "cond": Object {
                "index": 0,
                "kind": "Saved",
              },
              "do": Array [],
              "kind": "Conditional",
            },
            Object {
              "do": Array [
                Object {
                  "kind": "Return",
                  "value": Object {
                    "index": 0,
                    "kind": "Saved",
                  },
                },
              ],
              "kind": "Else",
            },
          ],
          "kind": "If",
        },
      ],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {},
}
`;

exports[`language ifs can 'not' values: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "negate" => FunctionDescription {
      "computation": Array [
        Object {
          "kind": "Return",
          "value": Object {
            "kind": "Comparison",
            "left": Object {
              "index": 0,
              "kind": "Saved",
            },
            "right": Object {
              "kind": "Bool",
              "value": false,
            },
            "sign": "==",
          },
        },
      ],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {},
}
`;

exports[`language ifs cleans up variables across else ifs: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "maybe" => FunctionDescription {
      "computation": Array [
        Object {
          "conditionally": Array [
            Object {
              "cond": Object {
                "index": 0,
                "kind": "Saved",
              },
              "do": Array [
                Object {
                  "kind": "Save",
                  "value": Object {
                    "index": 0,
                    "kind": "Saved",
                  },
                },
              ],
              "kind": "Conditional",
            },
            Object {
              "cond": Object {
                "kind": "Selection",
                "level": Array [
                  Object {
                    "kind": "String",
                    "value": "b",
                  },
                ],
                "root": Object {
                  "index": 0,
                  "kind": "Saved",
                },
              },
              "do": Array [
                Object {
                  "kind": "Save",
                  "value": Object {
                    "index": 0,
                    "kind": "Saved",
                  },
                },
              ],
              "kind": "Conditional",
            },
            Object {
              "cond": Object {
                "kind": "Selection",
                "level": Array [
                  Object {
                    "kind": "String",
                    "value": "c",
                  },
                ],
                "root": Object {
                  "index": 0,
                  "kind": "Saved",
                },
              },
              "do": Array [
                Object {
                  "kind": "Save",
                  "value": Object {
                    "index": 0,
                    "kind": "Saved",
                  },
                },
              ],
              "kind": "Conditional",
            },
            Object {
              "do": Array [
                Object {
                  "kind": "Save",
                  "value": Object {
                    "index": 0,
                    "kind": "Saved",
                  },
                },
              ],
              "kind": "Else",
            },
          ],
          "kind": "If",
        },
        Object {
          "kind": "Save",
          "value": Object {
            "index": 0,
            "kind": "Saved",
          },
        },
      ],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {},
}
`;

exports[`language ifs cleans up variables in ifs: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "maybe" => FunctionDescription {
      "computation": Array [
        Object {
          "conditionally": Array [
            Object {
              "cond": Object {
                "index": 0,
                "kind": "Saved",
              },
              "do": Array [
                Object {
                  "kind": "Save",
                  "value": Object {
                    "index": 0,
                    "kind": "Saved",
                  },
                },
              ],
              "kind": "Conditional",
            },
          ],
          "kind": "If",
        },
        Object {
          "kind": "Save",
          "value": Object {
            "index": 0,
            "kind": "Saved",
          },
        },
        Object {
          "kind": "Return",
          "value": Object {
            "index": 1,
            "kind": "Saved",
          },
        },
      ],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {},
}
`;

exports[`language ifs else scope is cleaned up after each block: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "maybe" => FunctionDescription {
      "computation": Array [
        Object {
          "conditionally": Array [
            Object {
              "cond": Object {
                "index": 0,
                "kind": "Saved",
              },
              "do": Array [
                Object {
                  "kind": "Save",
                  "value": Object {
                    "index": 0,
                    "kind": "Saved",
                  },
                },
              ],
              "kind": "Conditional",
            },
            Object {
              "do": Array [
                Object {
                  "kind": "Save",
                  "value": Object {
                    "index": 0,
                    "kind": "Saved",
                  },
                },
              ],
              "kind": "Else",
            },
          ],
          "kind": "If",
        },
        Object {
          "kind": "Save",
          "value": Object {
            "index": 0,
            "kind": "Saved",
          },
        },
      ],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {},
}
`;

exports[`language ifs single simple if: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "maybe" => FunctionDescription {
      "computation": Array [
        Object {
          "conditionally": Array [
            Object {
              "cond": Object {
                "index": 0,
                "kind": "Saved",
              },
              "do": Array [
                Object {
                  "kind": "Return",
                  "value": Object {
                    "index": 0,
                    "kind": "Saved",
                  },
                },
              ],
              "kind": "Conditional",
            },
          ],
          "kind": "If",
        },
      ],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {},
}
`;

exports[`language only allows global constants 1`] = `"Global variable someVar must be const"`;

exports[`language should allow a fixed number of args in functions: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "argy" => FunctionDescription {
      "computation": Array [],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
        Object {
          "data": undefined,
          "kind": "Any",
        },
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {},
}
`;

exports[`language should allow a global object: intermediate representation 1`] = `
Object {
  "funcs": Map {},
  "globals": Map {
    "obj" => Object {
      "kind": "glob",
      "name": "obj",
    },
  },
}
`;

exports[`language should allow bools, numbers, and strings: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "fff" => FunctionDescription {
      "computation": Array [],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {},
}
`;

exports[`language should allow empty pub funcs: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "doSomething" => FunctionDescription {
      "computation": Array [],
      "input": Array [],
    },
  },
  "globals": Map {},
}
`;

exports[`language should allow getting of nested keys: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "fff" => FunctionDescription {
      "computation": Array [
        Object {
          "kind": "Return",
          "value": Object {
            "kind": "Selection",
            "level": Array [
              Object {
                "index": 0,
                "kind": "Saved",
              },
              Object {
                "kind": "String",
                "value": "field",
              },
            ],
            "root": Object {
              "kind": "GlobalObject",
              "name": "gg",
            },
          },
        },
      ],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {
    "gg" => Object {
      "kind": "glob",
      "name": "gg",
    },
  },
}
`;

exports[`language should allow many global objects: intermediate representation 1`] = `
Object {
  "funcs": Map {},
  "globals": Map {
    "obj1" => Object {
      "kind": "glob",
      "name": "obj1",
    },
    "obj2" => Object {
      "kind": "glob",
      "name": "obj2",
    },
  },
}
`;

exports[`language should allow return statements within functions: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "returny" => FunctionDescription {
      "computation": Array [
        Object {
          "kind": "Return",
          "value": undefined,
        },
      ],
      "input": Array [],
    },
  },
  "globals": Map {},
}
`;

exports[`language should allow setting of keys on a global object: intermediate representation 1`] = `
Object {
  "funcs": Map {
    "fff" => FunctionDescription {
      "computation": Array [
        Object {
          "kind": "Update",
          "level": Array [
            Object {
              "kind": "String",
              "value": "abc",
            },
          ],
          "operation": Object {
            "index": 0,
            "kind": "Saved",
          },
          "root": Object {
            "kind": "GlobalObject",
            "name": "gg",
          },
        },
        Object {
          "kind": "Update",
          "level": Array [
            Object {
              "index": 0,
              "kind": "Saved",
            },
          ],
          "operation": Object {
            "index": 0,
            "kind": "Saved",
          },
          "root": Object {
            "kind": "GlobalObject",
            "name": "gg",
          },
        },
        Object {
          "kind": "Update",
          "level": Array [
            Object {
              "kind": "String",
              "value": "abc",
            },
          ],
          "operation": Object {
            "index": 0,
            "kind": "Saved",
          },
          "root": Object {
            "kind": "GlobalObject",
            "name": "gg",
          },
        },
      ],
      "input": Array [
        Object {
          "data": undefined,
          "kind": "Any",
        },
      ],
    },
  },
  "globals": Map {
    "gg" => Object {
      "kind": "glob",
      "name": "gg",
    },
  },
}
`;

exports[`language shouldn't allow deleting of whole variables 1`] = `
"In function f: 
	Delete cannot be applied to whole variables"
`;
